/* Base styles */
:root {
  font-family: var(--qui-font-family);
  font-size: var(--qui-font-size-base);
  line-height: var(--qui-line-height);
  font-weight: var(--qui-font-weight-normal);
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  transition:
    background-color var(--qui-transition-speed) var(--qui-animation-fade),
    border-color var(--qui-transition-speed) var(--qui-animation-fade),
    box-shadow var(--qui-transition-speed) var(--qui-animation-fade),
}

.window {
  backdrop-filter: blur(8px);
  animation: windowAppear 0.3s var(--qui-animation-bounce);
}

.start-menu,
.context-menu {
  animation: menuAppear 0.2s var(--qui-animation-fade);
  transform-origin: bottom left;
}

@keyframes windowAppear {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes menuAppear {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.button-hover {
  transition: all var(--qui-transition-speed) var(--qui-animation-bounce);
}

.button-hover:hover {
  transform: var(--qui-hover-scale);
  box-shadow: var(--qui-glow-effect);
}

.button-hover:active {
  transform: scale(0.98);
}

.taskbar .start-btn {
  position: relative;
}

.taskbar .start-btn::after {
  content: '';
  position: absolute;
  inset: -2px;
  background: var(--qui-accent-color);
  filter: blur(8px);
  opacity: 0;
  transition: opacity var(--qui-transition-speed) var(--qui-animation-fade);
  z-index: -1;
}

.taskbar .start-btn:hover::after {
  opacity: 0.5;
}

/* Entity reference drag visual */
.qui-entity-drag-icon {
  padding: 8px 12px;
  background: var(--qui-accent-color);
  color: var(--qui-bg-primary);
  border-radius: 4px;
  font-size: 12px;
  font-weight: var(--qui-font-weight-medium);
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3);
  border: 1px solid var(--qui-accent-border);
  /* Provide predictable visibility */
  opacity: 0.9 !important;
  position: fixed;
  z-index: 9999; /* Ensure it's always visible */
  font-family: var(--qui-font-family);
  font-size: var(--qui-font-size-small);
  pointer-events: none;
}

/* Global body class during entity drag */
body.qui-entity-drag-in-progress {
  cursor: grabbing !important;
  /* Prevent text selection during drag that can cause flickering */
  user-select: none !important;
}

body.qui-entity-drag-in-progress * {
  cursor: grabbing !important;
}

/* Drop cursor indicators */
body.qui-entity-drag-in-progress .droppable {
  cursor: copy !important;
}

body.qui-entity-drag-in-progress .db-value-display-container[data-field-type="EntityReference"] {
  cursor: link !important;
}